name: ECR Push Image with Commit Message

on:
  push:
    branches:
      - 'main'
#    tags:
#      - v*  # 'v' で始まるタグに反応（例: v1.0.0）

jobs:
  extract-commit-message:
    runs-on: ubuntu-latest
    outputs:
      repository-name: ${{ steps.extract-repo-name.outputs.repository-name }}
    steps:
      - uses: actions/checkout@v3
      - id: extract-repo-name
        run: |
          commit_message=$(git log -1 --pretty=%B)
          echo "Commit message: $commit_message"
          repository_name=$(echo "$commit_message" | grep -oP '(?<=<).*(?=>)')
          echo "::set-output name=repository-name::${repository_name}"

  push:
    runs-on: ubuntu-latest
    needs: extract-commit-message
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v3

      - name: Setup environment variables
        run: |
          AWS_REGION=${{ secrets.AWS_REGION }}
          AWS_ROLE_TO_ASSUME=${{ secrets.AWS_ROLE_TO_ASSUME }}
          REGISTRY=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          REPOSITORY_NAME=${{ needs.extract-commit-message.outputs.repository-name }}
          IMAGE_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${REPOSITORY_NAME}:${{ github.sha }}

      # 環境変数を出力するステップ
      - name: Print Environment Variables
        run: |
          echo "AWS Region: $AWS_REGION"
          echo "AWS Role to Assume: $AWS_ROLE_TO_ASSUME"
          echo "Registry: $REGISTRY"
          echo "Repository Name: $REPOSITORY_NAME"
          echo "Image URI: $IMAGE_URI"

      # AWS 認証
      - uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${AWS_REGION}
          role-to-assume: ${AWS_ROLE_TO_ASSUME}
          role-session-name: GitHubActions

      # ECR ログイン
      - uses: aws-actions/amazon-ecr-login@v1

      # Docker イメージを build・push する
      - name: Build and push Docker image
        run: |
          docker build -t ${IMAGE_URI} ./${REPOSITORY_NAME} -f ${REPOSITORY_NAME}/docker/Dockerfile
          docker images
          docker push ${IMAGE_URI}

  deploy:
    runs-on: ubuntu-latest
    needs: push
    steps:
      - uses: actions/checkout@v3

      - name: Setup environment variables
        run: |
          AWS_REGION=${{ secrets.AWS_REGION }}
          AWS_ROLE_TO_ASSUME=${{ secrets.AWS_ROLE_TO_ASSUME }}
          REPOSITORY_NAME=${{ needs.extract-commit-message.outputs.repository-name }}
          IMAGE_URI="${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${REPOSITORY_NAME}:${{ github.sha }}

      # AWS 認証
      - uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${AWS_REGION}
          role-to-assume: ${AWS_ROLE_TO_ASSUME}
          role-session-name: GitHubActions

      - name: Deploy to CloudFormation
        run: |
          REPOSITORY_NAME=${{ needs.extract-commit-message.outputs.repository-name }}
          aws cloudformation deploy \
            --template-file ${REPOSITORY_NAME}/cloudformation/cloudformation-template.yaml \
            --stack-name your-stack-name \
            --parameter-overrides ImageUri=${IMAGE_URI} FunctionName=${REPOSITORY_NAME} \
            --capabilities CAPABILITY_IAM
